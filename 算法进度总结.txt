1、双指针法：就是在遍历数组或者链表中设置两个指针，根据指针运动方向的不同可以分为
    1.1 同向双指针(滑动窗口)
    1.2 对向（碰撞）双指针
    1.3 快慢指针：一般用于解决链表中的问题：
        比如：寻找链表的[中间点]寻找链表中倒数第K个元素、判断链表中是否存在环、排序链表（1、找中间点使用归并排序，2、插入排序 3、冒泡排序）
2、二分查找法：需要数组有序
3、栈：单调栈的特性，求解左侧或右侧最大值、最小，可以机选面积之类的
 比如：接雨水、k长度的最大元素 、最大面积

4、前后缀分解法：好下表的元素
https://zhuanlan.zhihu.com/p/671839485
前缀和:所谓前缀和，是指一个数组中的前i项的和。设有数组a[0...n]，那么s[i] = a[0] + ... + a[i]。
这样s数组就是a数组的前缀和数组。

https://zhuanlan.zhihu.com/p/637328901
5、滑动窗口:是双指针的一种特例算法，窗口大小固定，使用右指针向右移动。保持窗口期大小固定
    https://blog.csdn.net/qq_74534898/article/details/131563779

6、双指针算法：

8、四大算法之一---贪心算法：是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，算法得到的是在某种意义上的局部最优解
 比如：最短路径算法、找零钱、小孩分饼干，分发糖果
9、四大算法之：分治算法：分治算法是将一个规模为N的问题分解为K个规模较小的子问题;
     就是把一个的大规模的问题分解成多个可以解决的小问题，在进行合并，每层递归的过程  分解-->解决-->合并。
     类似问题：二分搜索、大整数乘法、矩阵乘法、合并排序、快速排序等。
     https://leetcode.cn/problems/maximum-subarray/submissions/524100095/

10、四大算法之：回溯算法：
    主要是解决一些暴力枚举也解决不了的问题(组合、子集、分割、排列)，是一种基于深度优先的思想，通过减枝操作来减少搜索空间。
    从而找到问题的解。代码模板类似于递归算法
    例子：k个元素的组合，


11、四大算法之：动态规划算法：


12、BitMap的应用

13、A路寻星算法：A星寻路算法是一种高效、实用的路径搜索算法，
    它结合了广度优先搜索和最佳优先搜索的特点，通过启发式函数评估节点的重要性，从而快速找到最短路径


14、 二叉查找树可以提高节点查找的效率，并维持节点的有序性。
     b-树：多阶二叉树,便于查找元素，降低了树的高度，磁盘IO的次数更少，缺点是范围查找数据 不太适合
     和B+树：每个元素不保存数据，所有的原始都保存在叶子节点

15、 图：有向图：从a->b，但是从b不能到a点
        带权重的图：

        存储方式：1、邻接矩阵(创建一个n*n的二位数组)，缺点：空间浪费大
                 2、邻接表法：创建一个一维数组+链表形式，表示当前节点能达到哪些节点
                 3、逆邻接表法：创建一个一维数组+链表形式，表示有哪些节点能达到当前节点
        遍历方式：深度遍历、广度遍历

16、查找算法：
    有序数组的查找：二分查找法
    链表的查找：跳表
    字符串的匹配算法： BF暴力破解算法、 RK算法利用hash进行字符串匹配 、KMP算法
